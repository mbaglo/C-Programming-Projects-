/*
* Rochester Institute of Technology
* Department of Computer Engineering
* CMPE 460  Interfacing Digital Electronics
* LJBeato
* 1/14/2021
*
* Filename: main_timer_template.c
*/
#include <stdio.h>
#include <stdlib.h>

#include "msp.h"
#include "uart.h"
#include "leds.h"
#include "switches.h"
#include "Timer32.h"
#include "CortexM.h"
#include "Common.h"
#include "ADC14.h"
// The sprintf function seemed to cause a hange in the interrupt service routine.
// I think if we increase the HEAP size, it will work
// change to Heap_Size       EQU     0x00000200 in startup_msp432p401r_uvision.s


BOOLEAN Timer1RunningFlag = FALSE;
BOOLEAN Timer2RunningFlag = FALSE;

unsigned long MillisecondCounter = 0;



// Interrupt Service Routine for Timer32-1
void Timer32_1_ISR(void)
{	
			float voltage, temperatureC, temperatureF;
			unsigned int analogIn = 0;
			analogIn = ADC_In();
			/*uart0_put("ADC Val in Decimal = ");
			uart0_putnum(analogIn);
			uart0_put("\r\nADC Val in Hex = ");
			uart0_puthex(analogIn);
			uart0_put("\r\n");*/
			voltage = analogIn * (2.5/16384.0);
			temperatureC = (voltage - 0.5) * 100.0;
			temperatureF = (temperatureC * (9.0/5.0)) + 32.0;
			uart0_put("Temperature F = ");
			uart0_putnum(temperatureF);
			uart0_put("\r\n");
			uart0_put("Temperature C = ");
			uart0_putnum(temperatureC);
			uart0_put("\r\n");
	
}
// Interrupt Service Routine
void Timer32_2_ISR(void)
{

}



// main
int main(void)
{
	char temp[64];
	//initializations
	uart0_init();
	uart0_put("\r\nLab5 ADC demo\r\n");
	Timer32_1_Init(&Timer32_1_ISR, SystemCoreClock/2, T32DIV1);
	

	LED1_Init();
	LED2_Init();
	Switch2_Init();
	ADC0_InitSWTriggerCh6();
	EnableInterrupts();
  while(1)
	{
		WaitForInterrupt();
}
}
	

