Part 1: Basic commands
----------------------


The variabe is 'dog cat'
Enter a number:
2
The number is 2
The number 2 is less than or equal to 3.
Added 2 to 2, resulting in 4.
Incremented by 1 results in 3.
Counting from 1 to 4:
1
2
3
4
Cycling through the list:
List item: one
List item: two
List item: three
Enter 'dog' or 'cat' (or not):
dog
dog is either dog or cat
Enter a word or press enter for null:

-n check: string not defined.
-z check: string is NULL.
Enter a number [1-3]:
2
Case executed: You entered '2'.
Checking GCC version:
gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Listing files in the current directory:
The files are: cmdLine.c
The files are: lab_a.sh
The files are: lab_b.c
The files are: testdata.txt

Functions
---------

Script started.
Calling a function with 2 parameters: one two
In the function, the passed parameters are: one two
Before calling globVar: one two
Entered globVar: one two
Leaving globVar: dog cat
After calling globVar: one cat
The function returnNumber returned: 999
Script ended.

Exercise â€“ Part 2
-----------------

Reading data from testdata.txt...
The raw data in the Darray
[1.000000,2.000000]
[3.000000,4.000000]
[5.000000,6.000000]

Defining a first order solution matrix
Matrix A (3 x 2)
  0:      1.00000      1.00000 
  1:      1.00000      3.00000 
  2:      1.00000      5.00000 
Vector b (3 x 1)
     2.00000 
     4.00000 
     6.00000 

 ******* --- *******


Defining a second order solution matrix
Matrix A (3 x 3)
  0:      1.00000      1.00000      1.00000 
  1:      1.00000      3.00000      9.00000 
  2:      1.00000      5.00000     25.00000 
Vector b (3 x 1)
     2.00000 
     4.00000 
     6.00000 

 ******* --- *******


Defining a fourth order solution matrix
Matrix A (3 x 5)
  0:      1.00000      1.00000      1.00000      1.00000      1.00000 
  1:      1.00000      3.00000      9.00000     27.00000     81.00000 
  2:      1.00000      5.00000     25.00000    125.00000    625.00000 
Vector b (3 x 1)
     2.00000 
     4.00000 
     6.00000 

 ******* --- *******

==65797== Memcheck, a memory error detector
==65797== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65797== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==65797== Command: ./lab_b
==65797== 
Reading data from testdata.txt...
The raw data in the Darray
[1.000000,2.000000]
[3.000000,4.000000]
[5.000000,6.000000]

Defining a first order solution matrix
Matrix A (3 x 2)
  0:      1.00000      1.00000 
  1:      1.00000      3.00000 
  2:      1.00000      5.00000 
Vector b (3 x 1)
     2.00000 
     4.00000 
     6.00000 

 ******* --- *******


Defining a second order solution matrix
Matrix A (3 x 3)
  0:      1.00000      1.00000      1.00000 
  1:      1.00000      3.00000      9.00000 
  2:      1.00000      5.00000     25.00000 
Vector b (3 x 1)
     2.00000 
     4.00000 
     6.00000 

 ******* --- *******


Defining a fourth order solution matrix
Matrix A (3 x 5)
  0:      1.00000      1.00000      1.00000      1.00000      1.00000 
  1:      1.00000      3.00000      9.00000     27.00000     81.00000 
  2:      1.00000      5.00000     25.00000    125.00000    625.00000 
Vector b (3 x 1)
     2.00000 
     4.00000 
     6.00000 

 ******* --- *******

==65797== 
==65797== HEAP SUMMARY:
==65797==     in use at exit: 0 bytes in 0 blocks
==65797==   total heap usage: 41 allocs, 41 frees, 29,549 bytes allocated
==65797== 
==65797== All heap blocks were freed -- no leaks are possible
==65797== 
==65797== For lists of detected and suppressed errors, rerun with: -s
==65797== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
