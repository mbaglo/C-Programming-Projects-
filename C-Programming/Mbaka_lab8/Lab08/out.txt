Testing hw8c
5000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_0
Elapsed CPU Time DataTimer = '4.69' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '4.690000e-02' seconds
Elapsed CPU Time CalcTimer = '0.56' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '2.800000e-05' seconds
move fopen to top disabled 
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_2
Elapsed CPU Time DataTimer = '1.74' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '1.740000e-02' seconds
Elapsed CPU Time CalcTimer = '0.12' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '6.000000e-06' seconds
move fopen to top disabled 
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_3
Elapsed CPU Time DataTimer = '1.72' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '1.720000e-02' seconds
Elapsed CPU Time CalcTimer = '0.12' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '6.000000e-06' seconds
move fopen to top disabled 
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_mem
5000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt1
Adds x2 memory growth and realloc to the base code
5000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt1_0
Elapsed CPU Time DataTimer = '0.21' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '2.100000e-03' seconds
Elapsed CPU Time CalcTimer = '0.57' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '2.850000e-05' seconds
move fopen to top disabled 
Adds x2 memory growth and realloc to the base code
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt1_2
Elapsed CPU Time DataTimer = '0.20' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '2.000000e-03' seconds
Elapsed CPU Time CalcTimer = '0.12' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '6.000000e-06' seconds
move fopen to top disabled 
Adds x2 memory growth and realloc to the base code
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt1_3
Elapsed CPU Time DataTimer = '0.21' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '2.100000e-03' seconds
Elapsed CPU Time CalcTimer = '0.12' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '6.000000e-06' seconds
move fopen to top disabled 
Adds x2 memory growth and realloc to the base code
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt1_mem
Adds x2 memory growth and realloc to the base code
5000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt2
Adds native loop unrolling to the base code. 
5000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt2_0
Elapsed CPU Time DataTimer = '4.71' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '4.710000e-02' seconds
Elapsed CPU Time CalcTimer = '0.50' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '2.500000e-05' seconds
move fopen to top disabled 
Adds native loop unrolling to the base code. 
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt2_2
Elapsed CPU Time DataTimer = '1.67' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '1.670000e-02' seconds
Elapsed CPU Time CalcTimer = '0.09' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '4.500000e-06' seconds
move fopen to top disabled 
Adds native loop unrolling to the base code. 
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt2_3
Elapsed CPU Time DataTimer = '1.65' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '1.650000e-02' seconds
Elapsed CPU Time CalcTimer = '0.09' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '4.500000e-06' seconds
move fopen to top disabled 
Adds native loop unrolling to the base code. 
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt2_mem
Adds native loop unrolling to the base code. 
5000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt3
Adds smarter loop unrolling to the base code. 
5000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt3_0
Elapsed CPU Time DataTimer = '4.71' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '4.710000e-02' seconds
Elapsed CPU Time CalcTimer = '0.49' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '2.450000e-05' seconds
move fopen to top disabled 
Adds smarter loop unrolling to the base code. 
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt3_2
Elapsed CPU Time DataTimer = '1.64' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '1.640000e-02' seconds
Elapsed CPU Time CalcTimer = '0.09' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '4.500000e-06' seconds
move fopen to top disabled 
Adds smarter loop unrolling to the base code. 
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt3_3
Elapsed CPU Time DataTimer = '1.64' seconds
Elapsed CPU Time per Iteration (DataTimer, 100) = '1.640000e-02' seconds
Elapsed CPU Time CalcTimer = '0.09' seconds
Elapsed CPU Time per Iteration (CalcTimer, 20000) = '4.500000e-06' seconds
move fopen to top disabled 
Adds smarter loop unrolling to the base code. 
500000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Testing hw8c_opt3_mem
Adds smarter loop unrolling to the base code. 
5000 data lines processed, the least square line is : Y = 1.26393 * X + 0.823035

Running Valgrind on hw8c_mem
==15169== Memcheck, a memory error detector
==15169== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==15169== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==15169== Command: ./hw8c_mem
==15169== 
Fits a line to data points
(C Version) Usage: ./hw8c_mem Filename
==15169== 
==15169== HEAP SUMMARY:
==15169==     in use at exit: 0 bytes in 0 blocks
==15169==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==15169== 
==15169== All heap blocks were freed -- no leaks are possible
==15169== 
==15169== For lists of detected and suppressed errors, rerun with: -s
==15169== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Running Valgrind on hw8c_opt1_mem
==15172== Memcheck, a memory error detector
==15172== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==15172== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==15172== Command: ./hw8c_opt1_mem
==15172== 
Fits a line to data points
(C Version) Usage: ./hw8c_opt1_mem Filename
==15172== 
==15172== HEAP SUMMARY:
==15172==     in use at exit: 0 bytes in 0 blocks
==15172==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==15172== 
==15172== All heap blocks were freed -- no leaks are possible
==15172== 
==15172== For lists of detected and suppressed errors, rerun with: -s
==15172== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Running Valgrind on hw8c_opt2_mem
==15175== Memcheck, a memory error detector
==15175== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==15175== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==15175== Command: ./hw8c_opt2_mem
==15175== 
Fits a line to data points
(C Version) Usage: ./hw8c_opt2_mem Filename
==15175== 
==15175== HEAP SUMMARY:
==15175==     in use at exit: 0 bytes in 0 blocks
==15175==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==15175== 
==15175== All heap blocks were freed -- no leaks are possible
==15175== 
==15175== For lists of detected and suppressed errors, rerun with: -s
==15175== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Running Valgrind on hw8c_opt3_mem
==15178== Memcheck, a memory error detector
==15178== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==15178== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==15178== Command: ./hw8c_opt3_mem
==15178== 
Fits a line to data points
(C Version) Usage: ./hw8c_opt3_mem Filename
==15178== 
==15178== HEAP SUMMARY:
==15178==     in use at exit: 0 bytes in 0 blocks
==15178==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==15178== 
==15178== All heap blocks were freed -- no leaks are possible
==15178== 
==15178== For lists of detected and suppressed errors, rerun with: -s
==15178== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
