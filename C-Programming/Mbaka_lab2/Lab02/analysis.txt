The dynamic array is designed to resize dynamically, offering a flexible alternative to static arrays. This implementation adheres to specifications detailed in `DynamicArrays.h` for structure definitions and `ClassErrors.h` for error handling.

The code begins by including necessary libraries for input/output operations, string manipulation, and memory management, along with project-specific headers. The `CreateDArray` function initializes the dynamic array with a specified `InitialSize`, setting up its `Capacity` and allocating an initial memory block for the `Payload`. It robustly handles memory allocation failures by displaying informative error messages and exiting the program, ensuring reliability from the outset.

Adding new elements to the array is managed by the `PushToDArray` function, which checks the current `Capacity` and, if needed, expands the array, typically doubling its size to balance performance and memory usage before reallocating memory for the new size. The new element is then inserted, and the array's metadata is updated.

Proper memory management is ensured through the `DestroyDArray` function, which frees allocated memory to prevent memory leaks, resetting the array's metadata to reflect its emptied state. Additionally, a stub for a `SearchDArray` function is outlined for future implementation to enable element search functionality within the array.

On running 'gdb ./simpleTest' and then './test', the results reveals that the dynamic array was able to do the functions it was designed for. 

This program inserts 3 objects into a dynamic array of 2 entries
Line 1 contains text 'First line'
Line 2 contains text 'Second line'
Line 3 contains text 'Third line'
